<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.a2a2lab.module.review.ReviewDao">

	<resultMap id="resultMapObj" type="com.a2a2lab.module.review.ReviewDto"></resultMap>

	<!-- 공통 검색조건 -->
	<sql id="searchVo">
		<if test="searchVo.shIsDel != null and !searchVo.shIsDel.equals('')">AND rw.is_deleted = #{searchVo.shIsDel}</if>
			
		<choose>
		    <when test="searchVo.shOptionDate == 1">
		        <if test="searchVo.shDateStart != null and searchVo.shDateStart != ''">
		            AND rw.created_at &gt;= CONCAT(#{searchVo.shDateStart}, 'T00:00:00')
		        </if>
		        <if test="searchVo.shDateEnd != null and searchVo.shDateEnd != ''">
		            AND rw.created_at &lt;= CONCAT(#{searchVo.shDateEnd}, 'T23:59:59')
		        </if>
		    </when>
		</choose>
		
		<choose>
		    <when test="searchVo.shOptionRange eq 1">
		        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
		            AND rw.rating &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
		        </if>
		        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
		            AND rw.rating &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
		        </if>
		    </when>
		</choose>
		
		<choose>
			<when test="searchVo.shOption == 1">AND rw.review_id = #{searchVo.shValue}</when>
			<when test="searchVo.shOption == 2">AND p.name LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			<when test="searchVo.shOption == 3">AND mb.name LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			<when test="searchVo.shOption == 4">AND rw.description LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
		</choose>
	</sql>
	
	<select id="countReviewsByVo" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM
			review rw
			JOIN member mb ON mb.member_id = rw.member_id
			JOIN product p ON p.product_id = rw.product_id
		WHERE
			1=1
			<include refid="searchVo"></include>
	</select>

	<select id="findReviewsByVo" resultMap="resultMapObj">
		SELECT 
			rw.review_id AS reviewId
			,p.name AS menuName
			,mb.name AS memberName
			,rw.rating
			,rw.description
			,rw.created_at AS createdAt
		FROM
			review rw
			JOIN member mb ON mb.member_id = rw.member_id
			JOIN product p ON p.product_id = rw.product_id
		WHERE
			1=1
			<include refid="searchVo"></include>
		ORDER BY
			rw.review_id DESC
		LIMIT #{pageVo.rowNumToShow} OFFSET #{pageVo.startRnumForMysql}
	</select>
	
	<select id="countAllReview" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			review
		WHERE
			is_deleted = 0
	</select>
	
	<update id="softDeleteReview">
		UPDATE review SET
			is_deleted = 1
			,updated_at = now()
		WHERE
			1=1
			AND review_id = #{reviewId}
	</update>
	
	<update id="softDeleteReviewByMemberId">
		UPDATE review SET
			is_deleted = 1
			,updated_at = now()
		WHERE
			1=1
			AND member_id = #{memberId}
	</update>
	
	<update id="softDeleteReviewByProductId">
		UPDATE review SET
			is_deleted = 1
			,updated_at = now()
		WHERE
			1=1
			AND product_id = #{productId}
	</update>
	
	<delete id="hardDeleteReview">
		DELETE
		FROM
			review
		WHERE
			review_id = #{reviewId}
	</delete>

	<select id="getReviewListByProductId" resultMap="resultMapObj">
		SELECT
			rw.review_id AS reviewId
			,rw.rating AS rating
			,rw.description AS description
			,rw.created_at AS createdAt
			,rw.member_id AS memberId			
			,mb.name AS memberName
		FROM
			review rw
			JOIN member mb ON mb.member_id = rw.member_id
		WHERE
			1=1
		    AND rw.product_id = #{productId}
		    AND rw.is_deleted = 0
		ORDER BY
			rw.review_id DESC
	</select>

	<insert id="saveReview">
		INSERT INTO review(
			rating
			,description
			,created_at
			,is_deleted
			,member_id
			,product_id
		) VALUES(
			#{rating}
			,#{description}
			,now()
			,0
			,#{memberId}
			,#{productId}
		)
	</insert>
	
	<select id="findAvgRatingByProductId" resultType="Integer">
		SELECT
			ROUND(AVG(rating))
		FROM
			review
		WHERE
			product_id = #{productId}
	</select>
	
</mapper>