<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.a2a2lab.module.product.ProductDao">

	<resultMap id="resultMapObj" type="com.a2a2lab.module.product.ProductDto"></resultMap>

	<select id="countProductsByVo" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM
			product
		WHERE
			1=1
			<if test="searchVo.shIsDel != null and !searchVo.shIsDel.equals('')">AND is_deleted = #{searchVo.shIsDel}</if>
			<if test="searchVo.shType != null and !searchVo.shType.equals('')">AND type = #{searchVo.shType}</if>
			<if test="searchVo.shRecommand != null and !searchVo.shRecommand.equals('')">AND is_recommand = #{searchVo.shRecommand}</if>
			
			<choose>
			    <when test="searchVo.shOptionDate == 1">
			        <if test="searchVo.shDateStart != null and searchVo.shDateStart != ''">
			            AND created_at &gt;= CONCAT(#{searchVo.shDateStart}, 'T00:00:00')
			        </if>
			        <if test="searchVo.shDateEnd != null and searchVo.shDateEnd != ''">
			            AND created_at &lt;= CONCAT(#{searchVo.shDateEnd}, 'T23:59:59')
			        </if>
			    </when>
			    <when test="searchVo.shOptionDate == 2">
			        <if test="searchVo.shDateStart != null and searchVo.shDateStart != ''">
			            AND updated_at &gt;= CONCAT(#{searchVo.shDateStart}, 'T00:00:00')
			        </if>
			        <if test="searchVo.shDateEnd != null and searchVo.shDateEnd != ''">
			            AND updated_at &lt;= CONCAT(#{searchVo.shDateEnd}, 'T23:59:59')
			        </if>
			    </when>
			</choose>
			
			<choose>
			    <when test="searchVo.shOptionRange eq 1">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND price &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND price &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			    <when test="searchVo.shOptionRange eq 2">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND calories &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND calories &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			    <when test="searchVo.shOptionRange eq 3">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND order_count &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND order_count &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			    <when test="searchVo.shOptionRange eq 4">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND stock &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND stock &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			</choose>
			
			<choose>
				<when test="searchVo.shOption == 1">AND product_id = #{searchVo.shValue}</when>
				<when test="searchVo.shOption == 2">AND name LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			</choose>
	</select>

	<select id="findProductsByVo" resultMap="resultMapObj">
		SELECT 
			p.product_id AS productId
			,p.type
			,p.name
			,p.price
			,p.calories
			,p.is_recommand AS isRecommand
			,p.order_count AS orderCount
			,p.stock
			,p.rating
			,p.created_at AS createdAt
			,p.updated_at AS updatedAt
			,f.path AS filePath
		FROM
			product p
			JOIN file f ON f.file_id = p.file_id
		WHERE
			1=1
			<if test="searchVo.shIsDel != null and !searchVo.shIsDel.equals('')">AND p.is_deleted = #{searchVo.shIsDel}</if>
			<if test="searchVo.shType != null and !searchVo.shType.equals('')">AND p.type = #{searchVo.shType}</if>
			<if test="searchVo.shRecommand != null and !searchVo.shRecommand.equals('')">AND p.is_recommand = #{searchVo.shRecommand}</if>
			
			<choose>
			    <when test="searchVo.shOptionDate == 1">
			        <if test="searchVo.shDateStart != null and searchVo.shDateStart != ''">
			            AND p.created_at &gt;= CONCAT(#{searchVo.shDateStart}, 'T00:00:00')
			        </if>
			        <if test="searchVo.shDateEnd != null and searchVo.shDateEnd != ''">
			            AND p.created_at &lt;= CONCAT(#{searchVo.shDateEnd}, 'T23:59:59')
			        </if>
			    </when>
			    <when test="searchVo.shOptionDate == 2">
			        <if test="searchVo.shDateStart != null and searchVo.shDateStart != ''">
			            AND p.updated_at &gt;= CONCAT(#{searchVo.shDateStart}, 'T00:00:00')
			        </if>
			        <if test="searchVo.shDateEnd != null and searchVo.shDateEnd != ''">
			            AND p.updated_at &lt;= CONCAT(#{searchVo.shDateEnd}, 'T23:59:59')
			        </if>
			    </when>
			</choose>
			
			<choose>
			    <when test="searchVo.shOptionRange eq 1">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND p.price &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND p.price &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			    <when test="searchVo.shOptionRange eq 2">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND p.calories &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND p.calories &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			    <when test="searchVo.shOptionRange eq 3">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND p.order_count &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND p.order_count &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			    <when test="searchVo.shOptionRange eq 4">
			        <if test="searchVo.shRangeStart != null and searchVo.shRangeStart != ''">
			            AND p.stock &gt;= #{searchVo.shRangeStart, jdbcType=INTEGER}
			        </if>
			        <if test="searchVo.shRangeEnd != null and searchVo.shRangeEnd != ''">
			            AND p.stock &lt;= #{searchVo.shRangeEnd, jdbcType=INTEGER}
			        </if>
			    </when>
			</choose>
			
			<choose>
				<when test="searchVo.shOption == 1">AND p.product_id = #{searchVo.shValue}</when>
				<when test="searchVo.shOption == 2">AND p.name LIKE CONCAT('%',#{searchVo.shValue},'%')</when>
			</choose>
		ORDER BY
			p.product_id DESC
		LIMIT #{pageVo.rowNumToShow} OFFSET #{pageVo.startRnumForMysql}
	</select>

	<select id="findProductById" resultMap="resultMapObj">
		SELECT
			p.product_id AS productId
			,p.type
			,p.name
			,p.price
			,p.description
			,p.calories
			,p.sugars
			,p.protein
			,p.fat
			,p.sodium
			,p.stock
			,p.rating
			,p.is_recommand AS isRecommand
			,p.file_id AS fileId
			,f.path AS filePath
		FROM 
			product p
			JOIN file f ON f.file_id = p.file_id
		WHERE
			1=1
			AND p.product_id = #{productId}
	</select>

	<insert id="createProduct">
		INSERT INTO product(
			type
			,name
			,price
			,description
			,calories
			,sugars
			,protein
			,fat
			,sodium
			,stock
			,order_count
			,is_recommand
			,created_at
			,is_deleted
			,file_id
		) VALUES(
			#{type}
			,#{name}
			,#{price}
			,#{description}
			,#{calories}
			,#{sugars}
			,#{protein}
			,#{fat}
			,#{sodium}
			,#{stock}
			,0
			,#{isRecommand}
			,now()
			,0
			,#{fileId}
		)
	</insert>
	
	<update id="updateProduct">
		UPDATE product SET
			type = #{type}
			,name = #{name}
			,price = #{price}
			,description = #{description}
			,calories = #{calories}
			,sugars = #{sugars}
			,protein = #{protein}
			,fat = #{fat}
			,sodium = #{sodium}
			,stock = #{stock}
			,is_recommand = #{isRecommand}
			,updated_at = now()
		WHERE
			product_id = #{productId}
	</update>
	
	<update id="softDeleteProduct">
		UPDATE product SET
			is_deleted = 1
			,updated_at = now()
		WHERE
			product_id = #{productId}
	</update>
	
	<delete id="hardDeleteProduct">
		DELETE
		FROM
			product
		WHERE
			product_id = #{productId}
	</delete>

	<update id="fileUpdate">
		UPDATE product SET
			file_id = #{fileId}
		WHERE
			product_id = #{productId}
	</update>
	
	<update id="updateRating">
		UPDATE product SET
			rating = #{rating}
			,updated_at = now()
		WHERE
			product_id = #{productId}
	</update>
	
	<update id="updateOrderCountByProductId">
		UPDATE 
			product 
		SET
			order_count = order_count + 1 
			,updated_at = now()
		WHERE 
			product_id = #{productId}
	</update>



<!--	<sql id="selectCommon">
		FROM menu a
		WHERE 1=1
			
		<if test="shDelNy != null and !shDelNy.equals('')">AND a.menuDelNy = #{shDelNy}</if>
		<if test="shType != null and !shType.equals('')">AND a.menuType = #{shType}</if>
		<if test="shRecommand != null and !shRecommand.equals('')">AND a.recommand = #{shRecommand}</if>
		<if test="shNew != null and !shNew.equals('')">AND a.menuNew = #{shNew}</if>

		
		<choose>
			<when test="shOption == 1">AND a.menuNm LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 2">AND a.menuDescription LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
			
	</sql>

	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"></include>
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT 
			aa.*
			,aa.seq AS ifcgSeq
			,fu.path
		FROM (
			SELECT
				a.seq
				,a.menuNm
				,a.menuPrice
				,a.menuDescription
				,a.calories
				,a.sugars
				,a.protein
				,a.fat
				,a.sodium
				,a.menuType
				,a.recommand
				,a.menuNew
				,a.menuStock
				,a.menuOrderCnt
				,a.menuRating
				,a.fileUploaded_seq
			<include refid="selectCommon"></include>
			ORDER BY
				seq DESC
			) aa
			JOIN fileUploaded fu ON fu.seq = aa.fileUploaded_seq
		WHERE
			aa.seq = #{ifcgSeq}
	</select>

	<select id="selectList" resultMap="resultMapObj">
		SELECT 
			aa.*
			,aa.seq AS ifcgSeq 
		FROM (
			SELECT
				a.seq
				,a.menuNm
				,a.menuPrice
				,a.menuDescription
				,a.calories
				,a.sugars
				,a.protein
				,a.fat
				,a.sodium
				,a.menuType
				,a.recommand
				,a.menuNew
				,a.menuStock
			<include refid="selectCommon"></include>
			ORDER BY
				seq DESC
			) aa
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>

	<insert id="insert">
		INSERT INTO menu(
		    menuNm
			,menuPrice
			,menuDescription
			,calories
			,sugars
			,protein
			,fat
			,sodium
			,menuType
			,recommand
			,menuNew
			,menuStock
			,menuRegDateTime
			,menuDelNy
			,fileUploaded_seq
		) VALUES(
			#{menuNm}
			,#{menuPrice}
			,#{menuDescription}
			,#{calories}
			,#{sugars}
			,#{protein}
			,#{fat}
			,#{sodium}
			,#{menuType}
			,#{recommand}
			,#{menuNew}
			,#{menuStock}
			,now()
			,0
			,#{fileUploaded_seq}
		)
	</insert>
	
	<update id="update">
		UPDATE menu SET
			menuNm = #{menuNm}
			,menuPrice = #{menuPrice}
			,menuDescription = #{menuDescription}
			,calories = #{calories}
			,sugars = #{sugars}
			,protein = #{protein}
			,fat = #{fat}
			,sodium = #{sodium}
			,menuType = #{menuType}
			,recommand = #{recommand}
			,menuNew = #{menuNew}
			,menuStock = #{menuStock}
			,menuModDateTime = #{menuModDateTime}
		WHERE
			seq = #{ifcgSeq}
	</update>
	
	<update id="updateRating">
		UPDATE menu SET
			menuRating = #{menuRating}
			,menuModDateTime = now()
		WHERE
			seq = #{seq}
	</update>
	
	<update id="fileUpdate">
		UPDATE menu SET
			fileUploaded_seq = #{fileUploaded_seq}
		WHERE
			seq = #{ifcgSeq}
	</update>
	
	<update id="uelete">
		UPDATE menu SET
			menuDelNy = 1
		WHERE
			seq = #{seq}
	</update>
	
	<delete id="delete">
		Delete
		FROM
			menu
		WHERE
			seq = #{seq}
	</delete>

	<select id="selectShopList" resultMap="resultMapObj">
		SELECT 
			m.seq
			,m.menuNm
			,m.menuPrice
			,m.menuRating
			,fu.path
		FROM 
			menu m
			JOIN fileUploaded fu ON fu.seq = m.fileUploaded_seq
		WHERE
			1=1
			AND menuDelNy = 0
		ORDER BY
			seq DESC
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
-->	
</mapper>